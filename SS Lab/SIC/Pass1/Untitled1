#include"pass1.h"
#include<string.h>
void second()
{

    FILE *fp1,*fp2,*fp3,*fp4,*fp5;
    char str1[100],str2[100],str3[100],str4[100],str5[100];
    char str[100];
    char opcode[100],label[100],operand[100],objcode[100],opc[100],ope[100],address[100];
    int temp1,temp2,temp3,temp4;
    int i,j,k;
    int spaces=0;
    int wordCount = 0;
    int LOCCTR = 0;
    int startAddr = 0;
    int len=0;
    int a,b,c=0;
    char cvalue[100];
    char evalue[100];

    fp1 = fopen("intermediate.txt","r");
    fp2 = fopen("optab.txt","r");
    fp3 = fopen("symtab.txt","r");
    fp4 = fopen("objectCode.txt","w");
    fp5 = fopen("objectProgram.txt","w");


    if(fp1 == NULL )
        printf("ERROR opening input file!");
    if(fp2 == NULL )
        printf("ERROR opening optab file!");
    if(fp3 == NULL )
        printf("ERROR opening symtab file!");
    if(fp4 == NULL )
        printf("ERROR opening objcode file!");
    if(fp5 == NULL )
        printf("ERROR opening objprogram file!");

    fgets(str,60,fp1);
    sscanf(str,"%s%s%s%s",address,label,opcode,operand);
    printf("%s\t%s\t%s\t%s\n",address,label,opcode,operand);
    if(strcmp(opcode,"START")==0)
    {
        //printf("\nStarting address is %X\n",LOCCTR = atoi(operand));
        fprintf(fp5,"H^");
        for (i=0; label[i]!='\0';i++)
            len++;
        fprintf(fp5,"%s",label);
        for(i = len; i<6;i++)
            fprintf(fp5,"-");
        a=LOCCTR;
        len=0;
        while(a!=0)
        {
            a=a/10;
            len++;
        }
        for(i = len; i<6;i++)
            fprintf(fp5,"0");

        fprintf(fp5,"%X",LOCCTR);
    }

    while(fgets(str,60,fp1)!=NULL)
    {
        wordCount = findWords(str);
        if (wordCount == 4)
        {
            rewind(fp2);
            rewind(fp3);
            sscanf(str,"%s%s%s%s",address,label,opcode,operand);
                if(strcmp(opcode,"BYTE")==0)
                {
                    if(operand[0]=='C')
                    {
                            printf("%s\t%s\t%s\t%s\t",address,label,opcode,operand);
                            for(i=2,c=0;operand[i]!='\0'&&c<3;i++,c++)
                            {
                                printf("%X",operand[i]);
                            }
                            printf("\n");
                            continue;

                        }
                        if(operand[0]=='X')
                        {
                            printf("%s\t%s\t%s\t%s\t",address,label,opcode,operand);
                            for(i=2;i,i<strlen(operand)-1;i++)
                                printf("%c",operand[i]);
                            printf("\n");
                            goto SKIP;
                        }

                }
                if(strcmp(opcode,"RESB")==0)
                {

                    //printf("RESBBB");
                    strcpy(cvalue,"");
                    strcpy(ope,"");
                    goto PRINT;
                    break;
                }
                if(strcmp(opcode,"RESW")==0)
                {
                    //printf("RESWWWW");
                    strcpy(cvalue,"");
                    strcpy(ope,"");
                    goto PRINT;
                    break;
                }

            while( fgets (str1, 60, fp2)!=NULL )
            {
                sscanf(str1,"%s%s",opc,cvalue);
                if(strcmp(opcode,"WORD")==0)
                {
                    strcpy(ope,operand);
                    strcpy(cvalue,"00000");
                    goto PRINT;
                    break;
                }

                if(strcmp(opc,opcode)==0)
                {
                    break;
                }
            }

            while( fgets (str3, 60, fp3)!=NULL )
            {
                sscanf(str3,"%s%s",ope,evalue);
                if(strcmp(evalue,operand)==0)
                {
                    break;
                }
            }
            PRINT: printf("%s\t%s\t%s\t%s\t%s%s\n",address,label,opcode,operand,cvalue,ope);
            SKIP: ;
        }
        if (wordCount == 3)
        {
            sscanf(str,"%s%s%s%s",address,opcode,operand);
            rewind(fp2);
            rewind(fp3);
            while( fgets (str1, 60, fp2)!=NULL )
            {
                sscanf(str1,"%s%s",opc,cvalue);
                if(strcmp(opc,opcode)==0)
                {
                    break;
                }
            }

            while( fgets (str3, 60, fp3)!=NULL )
            {
                sscanf(str3,"%s%s",ope,evalue);
                if(strcmp(evalue,operand)==0)
                {
                    break;
                }
            }
            printf("%s\t\t%s\t%s\t%s%s\n",address,opcode,operand,cvalue,ope);
        }
        if (wordCount == 2)
        {
            sscanf(str,"%s%s%s",address,opcode);
            rewind(fp2);
            rewind(fp3);
            while( fgets (str1, 60, fp2)!=NULL )
            {
                sscanf(str1,"%s%s",opc,cvalue);
                if(strcmp(opc,opcode)==0)
                {
                    strcpy(ope,"0000");
                    break;
                }
            }
            if(strcmp(opcode,"END")==0)
            {
                strcpy(cvalue,"");
                strcpy(ope,"");
            }
            printf("%s\t\t%s\t\t%s%s\n",address,opcode,cvalue,ope);
        }
    }
    fclose(fp1);
    fclose(fp2);
    fclose(fp3);
    fclose(fp4);
    fclose(fp5);
    printf("END of Pass2- SIC!");

}
